(ROOT
  (S
    (NP (DT The) (JJ old) (NN car))
    (VP (VBD broke)
      (PRT (RP down))
      (PP (IN in)
        (NP (DT the) (NN car) (NN park))))
    (. .)))

det(car-3, The-1)
amod(car-3, old-2)
nsubj(broke-4, car-3)
root(ROOT-0, broke-4)
compound:prt(broke-4, down-5)
case(park-9, in-6)
det(park-9, the-7)
compound(park-9, car-8)
nmod:in(broke-4, park-9)

(ROOT
  (S
    (NP
      (QP (IN At) (JJS least) (CD two))
      (NNS men))
    (VP
      (VP (VBD broke)
        (PRT (RP in)))
      (CC and)
      (VP (VBD stole)
        (NP (PRP$ my) (NN TV))))
    (. .)))

case(least-2, At-1)
nmod:npmod(two-3, least-2)
nummod(men-4, two-3)
nsubj(broke-5, men-4)
nsubj(stole-8, men-4)
root(ROOT-0, broke-5)
compound:prt(broke-5, in-6)
cc(broke-5, and-7)
conj:and(broke-5, stole-8)
nmod:poss(TV-10, my-9)
dobj(stole-8, TV-10)

(ROOT
  (S
    (NP (DT The) (NNS horses))
    (VP (VBD were)
      (VP
        (VP (VBN broken)
          (PP (IN in)))
        (CC and)
        (VP (VBN ridden)
          (PP (IN in)
            (NP (CD two) (NNS weeks))))))
    (. .)))

det(horses-2, The-1)
nsubjpass(broken-4, horses-2)
nsubjpass(ridden-7, horses-2)
auxpass(broken-4, were-3)
root(ROOT-0, broken-4)
nmod(broken-4, in-5)
cc(broken-4, and-6)
conj:and(broken-4, ridden-7)
case(weeks-10, in-8)
nummod(weeks-10, two-9)
nmod:in(ridden-7, weeks-10)

(ROOT
  (S
    (NP (NNP Kim)
      (CC and)
      (NNP Sandy))
    (DT both)
    (VP (VBD broke)
      (PRT (RP up))
      (PP (IN with)
        (NP (PRP$ their) (NNS partners))))
    (. .)))

nsubj(broke-5, Kim-1)
cc(Kim-1, and-2)
conj:and(Kim-1, Sandy-3)
nsubj(broke-5, Sandy-3)
dep(broke-5, both-4)
root(ROOT-0, broke-5)
compound:prt(broke-5, up-6)
case(partners-9, with-7)
nmod:poss(partners-9, their-8)
nmod:with(broke-5, partners-9)

(ROOT
  (S
    (NP
      (NP (DT The) (NN horse))
      (SBAR
        (WHNP (WDT which))
        (S
          (NP (NNP Kim) (NNP sometimes) (NNS rides))
          (VP (VBZ is)
            (ADJP (RBR more) (JJ bad))))))
    (VP (VBN tempered)
      (PP (IN than)
        (NP (NN mine))))
    (. .)))

det(horse-2, The-1)
dobj(bad-9, horse-2)
nsubj(tempered-10, horse-2)
ref(horse-2, which-3)
compound(rides-6, Kim-4)
compound(rides-6, sometimes-5)
nsubj(bad-9, rides-6)
cop(bad-9, is-7)
advmod(bad-9, more-8)
acl:relcl(horse-2, bad-9)
root(ROOT-0, tempered-10)
case(mine-12, than-11)
nmod:than(tempered-10, mine-12)

(ROOT
  (S
    (NP
      (NP
        (NP (DT The) (NN horse))
        (CONJP (RB as) (RB well) (IN as))
        (NP (DT the) (NNS rabbits)))
      (SBAR
        (WHNP (WDT which))
        (S
          (NP (PRP we))
          (VP (VBD wanted)
            (S
              (VP (TO to)
                (VP (VB eat))))))))
    (VP (VBP have)
      (VP (VBN escaped)))
    (. .)))

det(horse-2, The-1)
dobj(wanted-10, horse-2)
nsubj:xsubj(eat-12, horse-2)
nsubj(escaped-14, horse-2)
cc(horse-2, as-3)
mwe(as-3, well-4)
mwe(as-3, as-5)
det(rabbits-7, the-6)
conj:and(horse-2, rabbits-7)
dobj(wanted-10, rabbits-7)
nsubj:xsubj(eat-12, rabbits-7)
nsubj(escaped-14, rabbits-7)
ref(horse-2, which-8)
nsubj(wanted-10, we-9)
acl:relcl(horse-2, wanted-10)
mark(eat-12, to-11)
xcomp(wanted-10, eat-12)
aux(escaped-14, have-13)
root(ROOT-0, escaped-14)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP
        (NP (PRP$ my) (NN aunt) (POS 's))
        (NN car)
        (SBAR
          (WHNP (WDT which))
          (S
            (NP (PRP we))
            (VP (VBD sold)
              (PP (IN at)
                (NP (NN auction)))
              (NP (JJ last) (NN year))
              (PP (IN in)
                (NP (NNP February))))))))
    (. .)))

nsubj(car-6, It-1)
cop(car-6, was-2)
nmod:poss(aunt-4, my-3)
nmod:poss(car-6, aunt-4)
case(aunt-4, 's-5)
root(ROOT-0, car-6)
dobj(sold-9, which-7)
nsubj(sold-9, we-8)
ccomp(car-6, sold-9)
case(auction-11, at-10)
nmod:at(sold-9, auction-11)
amod(year-13, last-12)
nmod:tmod(sold-9, year-13)
case(February-15, in-14)
nmod:in(sold-9, February-15)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ only) (NN rabbit))
      (SBAR (IN that)
        (S
          (NP (PRP I))
          (ADVP (RB ever))
          (VP (VBD liked)))))
    (VP (VBD was)
      (VP (VBN eaten)
        (PP (IN by)
          (NP (PRP$ my) (NNS parents)))
        (NP (CD one) (NN summer))))
    (. .)))

det(rabbit-3, The-1)
amod(rabbit-3, only-2)
nsubjpass(eaten-9, rabbit-3)
mark(liked-7, that-4)
nsubj(liked-7, I-5)
advmod(liked-7, ever-6)
dep(rabbit-3, liked-7)
auxpass(eaten-9, was-8)
root(ROOT-0, eaten-9)
case(parents-12, by-10)
nmod:poss(parents-12, my-11)
nmod:by(eaten-9, parents-12)
nummod(summer-14, one-13)
nmod:tmod(eaten-9, summer-14)

(ROOT
  (S
    (NP
      (NP (DT The) (NNS veterans))
      (SBAR
        (WHNP (WP who))
        (S
          (NP (PRP I))
          (VP (VBD thought)
            (SBAR (IN that)
              (S
                (NP (PRP we))
                (VP (MD would)
                  (VP (VB meet)
                    (PP (IN at)
                      (NP (DT the) (NN reunion)))))))))))
    (VP (VBD were)
      (ADJP (JJ dead)))
    (. .)))

det(veterans-2, The-1)
dobj(thought-5, veterans-2)
nsubj(dead-14, veterans-2)
ref(veterans-2, who-3)
nsubj(thought-5, I-4)
acl:relcl(veterans-2, thought-5)
mark(meet-9, that-6)
nsubj(meet-9, we-7)
aux(meet-9, would-8)
ccomp(thought-5, meet-9)
case(reunion-12, at-10)
det(reunion-12, the-11)
nmod:at(meet-9, reunion-12)
cop(dead-14, were-13)
root(ROOT-0, dead-14)

(ROOT
  (S
    (NP
      (NP (JJ Natural) (NNS disasters))
      (PRN (: --)
        (NP
          (NP (NNS storms))
          (, ,)
          (NP (NN flooding))
          (, ,)
          (NP (NNS hurricanes)))
        (: --)))
    (VP
      (VP (VBP occur)
        (ADVP (RB infrequently)))
      (CC but)
      (VP (VBP cause)
        (NP (NN devastation))
        (SBAR (IN that)
          (S
            (NP (NNS strains) (NNS resources))
            (PP (TO to)
              (NP (JJ breaking) (NN point)))))))
    (. .)))

amod(disasters-2, Natural-1)
nsubj(occur-10, disasters-2)
nsubj(cause-13, disasters-2)
dep(disasters-2, storms-4)
appos(storms-4, flooding-6)
appos(storms-4, hurricanes-8)
root(ROOT-0, occur-10)
advmod(occur-10, infrequently-11)
cc(occur-10, but-12)
conj:but(occur-10, cause-13)
dobj(cause-13, devastation-14)
mark(resources-17, that-15)
compound(resources-17, strains-16)
dep(cause-13, resources-17)
case(point-20, to-18)
amod(point-20, breaking-19)
dep(resources-17, point-20)

(ROOT
  (S
    (S
      (NP
        (NP (NNS Letters))
        (VP (VBN delivered)
          (PP (IN on)
            (NP (NN time)))
          (PP (IN by)
            (NP (JJ old-fashioned) (NNS means)))))
      (VP (VBP are)
        (ADJP (RB increasingly) (JJ rare))))
    (, ,) (IN so)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (ADVP
          (ADVP (RB as) (RB well))
          (SBAR (IN that)
            (S
              (NP (DT that))
              (VP (VBZ is)
                (ADJP
                  (NP (RB not) (DT the) (JJ only) (NN option))
                  (JJ available))))))))
    (. .)))

nsubj(rare-10, Letters-1)
acl(Letters-1, delivered-2)
case(time-4, on-3)
nmod:on(delivered-2, time-4)
case(means-7, by-5)
amod(means-7, old-fashioned-6)
nmod:by(delivered-2, means-7)
cop(rare-10, are-8)
advmod(rare-10, increasingly-9)
root(ROOT-0, rare-10)
dep(rare-10, so-12)
nsubj(is-14, it-13)
parataxis(rare-10, is-14)
advmod(is-14, as-15)
mwe(as-15, well-16)
mark(available-24, that-17)
nsubj(available-24, that-18)
cop(available-24, is-19)
neg(option-23, not-20)
det(option-23, the-21)
amod(option-23, only-22)
nmod:npmod(available-24, option-23)
advcl(as-15, available-24)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (MD wo) (RB n't)
        (VP (VB rain))))
    (CC but)
    (S
      (NP (EX there))
      (VP (MD might)
        (VP (VB be)
          (NP
            (NP (NN snow))
            (PP (IN on)
              (NP (JJ high) (NN ground))))
          (SBAR (IN if)
            (S
              (NP (DT the) (NN temperature))
              (VP (VBZ stays)
                (NP
                  (NP (RB about) (DT the) (JJ same))
                  (PP (IN over)
                    (NP (DT the) (JJ next) (CD 24) (NNS hours))))))))))
    (. .)))

nsubj(rain-4, It-1)
aux(rain-4, wo-2)
neg(rain-4, n't-3)
root(ROOT-0, rain-4)
cc(rain-4, but-5)
expl(snow-9, there-6)
aux(snow-9, might-7)
cop(snow-9, be-8)
conj:but(rain-4, snow-9)
case(ground-12, on-10)
amod(ground-12, high-11)
nmod:on(snow-9, ground-12)
mark(stays-16, if-13)
det(temperature-15, the-14)
nsubj(stays-16, temperature-15)
advcl(snow-9, stays-16)
advmod(same-19, about-17)
det(same-19, the-18)
dobj(stays-16, same-19)
case(hours-24, over-20)
det(hours-24, the-21)
amod(hours-24, next-22)
nummod(hours-24, 24-23)
nmod:over(same-19, hours-24)

(ROOT
  (S
    (NP
      (NP (DT The)
        (ADJP (JJ long)
          (CC and)
          (JJ lonely))
        (NN road))
      (PP (TO to)
        (NP (NN redemption))))
    (VP (VBZ begins)
      (PP (IN with)
        (NP (NN self-reflection)))
      (: :)
      (S
        (NP (DT the) (NN need))
        (VP (TO to)
          (VP (VB delve)
            (NP (NNS inwards))
            (PP (TO to)
              (NP
                (NP (JJ deconstruct) (NNS layers))
                (PP (IN of)
                  (NP (JJ psychological) (NN obfuscation)))))))))
    (. .)))

det(road-5, The-1)
amod(road-5, long-2)
cc(long-2, and-3)
conj:and(long-2, lonely-4)
amod(road-5, lonely-4)
nsubj(begins-8, road-5)
case(redemption-7, to-6)
nmod:to(road-5, redemption-7)
root(ROOT-0, begins-8)
case(self-reflection-10, with-9)
nmod:with(begins-8, self-reflection-10)
det(need-13, the-12)
dobj(begins-8, need-13)
mark(delve-15, to-14)
parataxis(begins-8, delve-15)
dobj(delve-15, inwards-16)
case(layers-19, to-17)
amod(layers-19, deconstruct-18)
nmod:to(delve-15, layers-19)
case(obfuscation-22, of-20)
amod(obfuscation-22, psychological-21)
nmod:of(layers-19, obfuscation-22)

(ROOT
  (S
    (S
      (NP (PRP$ My) (NN wildest) (NN dream))
      (VP (VBZ is)
        (S
          (VP (TO to)
            (VP (VB build)
              (NP
                (NP (DT a) (NNP POS) (NN tagger))
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (VP
                      (VP (VBZ processes)
                        (NP
                          (NP (CD 10K) (NNS words))
                          (PP (IN per)
                            (NP (NN second)))))
                      (CC and)
                      (VP (VBZ uses)
                        (NP
                          (NP
                            (QP (RB only) (CD 1MB)))
                          (PP (IN of)
                            (NP (NNP RAM))))))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (MD may)
        (VP (VB prove)
          (ADJP (RB too) (JJ hard)))))
    (. .)))

nmod:poss(dream-3, My-1)
compound(dream-3, wildest-2)
nsubj(is-4, dream-3)
nsubj:xsubj(build-6, dream-3)
root(ROOT-0, is-4)
mark(build-6, to-5)
xcomp(is-4, build-6)
det(tagger-9, a-7)
dep(tagger-9, POS-8)
dobj(build-6, tagger-9)
nsubj(processes-11, tagger-9)
nsubj(uses-17, tagger-9)
ref(tagger-9, which-10)
acl:relcl(tagger-9, processes-11)
nummod(words-13, 10K-12)
dobj(processes-11, words-13)
case(second-15, per-14)
nmod:per(words-13, second-15)
cc(processes-11, and-16)
acl:relcl(tagger-9, uses-17)
conj:and(processes-11, uses-17)
advmod(1MB-19, only-18)
dobj(uses-17, 1MB-19)
case(RAM-21, of-20)
nmod:of(1MB-19, RAM-21)
cc(is-4, but-23)
nsubj(prove-26, it-24)
aux(prove-26, may-25)
conj:but(is-4, prove-26)
advmod(hard-28, too-27)
xcomp(prove-26, hard-28)

(ROOT
  (S
    (NP (NNP English))
    (ADVP (RB also))
    (VP (VBZ has)
      (NP
        (NP (JJ many) (NNS words))
        (PP (IN of)
          (NP
            (ADJP
              (ADJP (JJR more))
              (CC or)
              (ADJP (RBR less) (JJ unique)))
            (NN function)))
        (, ,)
        (PP (VBG including)
          (NP
            (NP
              (NP
                (NP
                  (NP (NNS interjections))
                  (PRN (-LRB- -LRB-)
                    (FRAG
                      (INTJ (UH oh))
                      (, ,)
                      (NP (NN ah)))
                    (-RRB- -RRB-)))
                (, ,)
                (NP
                  (NP (NNS negatives))
                  (PRN (-LRB- -LRB-)
                    (FRAG
                      (INTJ (UH no))
                      (, ,)
                      (NP (RB not)))
                    (-RRB- -RRB-)))
                (, ,)
                (NP
                  (NP (JJ politeness) (NNS markers))
                  (PRN (-LRB- -LRB-)
                    (S
                      (VP (VB please) (, ,) (VB thank)
                        (NP (PRP you))))
                    (-RRB- -RRB-)))
                (, ,)
                (PP (CC and)
                  (NP
                    (NP (DT the) (NN existential))
                    (`` `)
                    (NP (RB there))
                    ('' '))))
              (PRN (-LRB- -LRB-)
                (S
                  (NP (EX there))
                  (VP (VBP are)
                    (NP
                      (NP (NNS horses))
                      (CONJP (CC but)
                        (RB not))
                      (NP (NNS unicorns)))))
                (-RRB- -RRB-)))
            (PP (IN among)
              (NP (NNS others)))))))
    (. .)))

nsubj(has-3, English-1)
advmod(has-3, also-2)
root(ROOT-0, has-3)
amod(words-5, many-4)
dobj(has-3, words-5)
case(function-11, of-6)
amod(function-11, more-7)
cc(more-7, or-8)
advmod(unique-10, less-9)
conj:or(more-7, unique-10)
amod(function-11, unique-10)
nmod:of(words-5, function-11)
case(interjections-14, including-13)
nmod:including(words-5, interjections-14)
discourse(ah-18, oh-16)
dep(interjections-14, ah-18)
appos(interjections-14, negatives-21)
discourse(not-25, no-23)
dep(negatives-21, not-25)
amod(markers-29, politeness-28)
appos(interjections-14, markers-29)
dep(markers-29, please-31)
dep(please-31, thank-33)
dobj(please-31, you-34)
case(existential-39, and-37)
det(existential-39, the-38)
nmod:and(interjections-14, existential-39)
dep(existential-39, there-41)
expl(are-45, there-44)
dep(interjections-14, are-45)
nsubj(are-45, horses-46)
cc(not-48, but-47)
cc(horses-46, not-48)
nsubj(are-45, unicorns-49)
conj:negcc(horses-46, unicorns-49)
case(others-52, among-51)
nmod:among(interjections-14, others-52)

(ROOT
  (S
    (S
      (S
        (VP (VBG Making)
          (NP (DT these) (NNS decisions))))
      (VP (VBZ requires)
        (NP
          (NP (JJ sophisticated) (NN knowledge))
          (PP (IN of)
            (NP (NN syntax))))))
    (: ;)
    (S
      (NP
        (NP (JJ tagging) (NNS manuals))
        (PRN (-LRB- -LRB-)
          (NP (NNP Santorini))
          (, ,)
          (NP (CD 1990))
          (-RRB- -RRB-)))
      (VP (VBP give)
        (NP (JJ various) (NNS heuristics))
        (NP
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (MD can)
                (VP (VB help)
                  (S
                    (NP (JJ human) (NNS coders))
                    (VP (VB make)
                      (NP (DT these) (NNS decisions))))))))
          (CC and)
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (MD can)
                (ADVP (RB also))
                (VP (VB provide)
                  (NP (JJ useful) (NNS features))
                  (PP (IN for)
                    (NP (JJ automatic) (NNS taggers))))))))))
    (. .)))

csubj(requires-4, Making-1)
det(decisions-3, these-2)
dobj(Making-1, decisions-3)
root(ROOT-0, requires-4)
amod(knowledge-6, sophisticated-5)
dobj(requires-4, knowledge-6)
case(syntax-8, of-7)
nmod:of(knowledge-6, syntax-8)
amod(manuals-11, tagging-10)
nsubj(give-17, manuals-11)
appos(manuals-11, Santorini-13)
dep(Santorini-13, 1990-15)
parataxis(requires-4, give-17)
amod(heuristics-19, various-18)
iobj(give-17, heuristics-19)
nsubj(help-22, that-20)
aux(help-22, can-21)
dobj(give-17, help-22)
amod(coders-24, human-23)
nsubj(make-25, coders-24)
ccomp(help-22, make-25)
det(decisions-27, these-26)
dobj(make-25, decisions-27)
cc(help-22, and-28)
nsubj(provide-32, that-29)
aux(provide-32, can-30)
advmod(provide-32, also-31)
dobj(give-17, provide-32)
conj:and(help-22, provide-32)
amod(features-34, useful-33)
dobj(provide-32, features-34)
case(taggers-37, for-35)
amod(taggers-37, automatic-36)
nmod:for(provide-32, taggers-37)

(ROOT
  (S
    (NP (DT The) (NNP Penn) (NNP Treebank) (NN tagset))
    (VP (VBD was)
      (VP (VBN culled)
        (PP (IN from)
          (NP
            (NP (DT the) (JJ original) (JJ 87-tag) (NN tagset))
            (PP (IN for)
              (NP (DT the) (NNP Brown) (NNP Corpus)))))))
    (. .)))

det(tagset-4, The-1)
compound(tagset-4, Penn-2)
compound(tagset-4, Treebank-3)
nsubjpass(culled-6, tagset-4)
auxpass(culled-6, was-5)
root(ROOT-0, culled-6)
case(tagset-11, from-7)
det(tagset-11, the-8)
amod(tagset-11, original-9)
amod(tagset-11, 87-tag-10)
nmod:from(culled-6, tagset-11)
case(Corpus-15, for-12)
det(Corpus-15, the-13)
compound(Corpus-15, Brown-14)
nmod:for(tagset-11, Corpus-15)

(ROOT
  (S
    (PP (IN For)
      (NP
        (NP (NN example))
        (SBAR
          (S
            (NP (DT the) (JJ original) (NNP Brown)
              (CC and)
              (NNP C5) (NNS tagsets))
            (VP (VBP include)
              (SBAR
                (S
                  (NP
                    (NP (DT a) (JJ separate) (NN tag))
                    (PP (IN for)
                      (NP
                        (NP (DT each))
                        (PP (IN of)
                          (NP
                            (NP (DT the) (JJ different) (NNS forms))
                            (PP (IN of)
                              (NP (DT the) (NNS verbs))))))))
                  (VP (VBP do)))))))
        (PRN (-LRB- -LRB-)
          (NP
            (NP (NNP e.g.) (NNP C5) (NNP tag) (NNP VDD))
            (SBAR (IN for)
              (S
                (VP
                  (VP (VBD did))
                  (CC and)
                  (VP (VBP VDG)
                    (NP (NN tag))
                    (PP (IN for)
                      (S
                        (VP (VBG doing)))))))))
          (-RRB- -RRB-))))
    (, ,)
    (VP
      (VP (VB be))
      (CC and)
      (VP (VB have)))
    (. .)))

case(example-2, For-1)
nmod:for(be-37, example-2)
det(Brown-5, the-3)
amod(Brown-5, original-4)
nsubj(include-9, Brown-5)
cc(Brown-5, and-6)
compound(tagsets-8, C5-7)
conj:and(Brown-5, tagsets-8)
nsubj(include-9, tagsets-8)
acl:relcl(example-2, include-9)
det(tag-12, a-10)
amod(tag-12, separate-11)
nsubj(do-22, tag-12)
case(each-14, for-13)
nmod:for(tag-12, each-14)
case(forms-18, of-15)
det(forms-18, the-16)
amod(forms-18, different-17)
nmod:of(each-14, forms-18)
case(verbs-21, of-19)
det(verbs-21, the-20)
nmod:of(forms-18, verbs-21)
ccomp(include-9, do-22)
compound(VDD-27, e.g.-24)
compound(VDD-27, C5-25)
compound(VDD-27, tag-26)
dep(example-2, VDD-27)
mark(did-29, for-28)
dep(VDD-27, did-29)
cc(did-29, and-30)
dep(VDD-27, VDG-31)
conj:and(did-29, VDG-31)
dobj(VDG-31, tag-32)
mark(doing-34, for-33)
advcl(VDG-31, doing-34)
root(ROOT-0, be-37)
cc(be-37, and-38)
conj:and(be-37, have-39)

(ROOT
  (S
    (NP
      (NP (DT The) (RB slightly) (VBN simplified) (NN version))
      (PP (IN of)
        (NP (DT the) (NNP Viterbi))))
    (VP (VBP algorithm)
      (SBAR (IN that)
        (S
          (NP (PRP we))
          (ADVP (RB present))
          (VP
            (VP (VBZ takes)
              (PP (IN as)
                (NP
                  (NP
                    (NP (NN input))
                    (NP (DT a) (JJ single) (NN HMM)))
                  (CC and)
                  (NP
                    (NP (DT a) (NN sequence))
                    (PP (IN of)
                      (NP (JJ observed) (NNS words))))))
              (NP
                (NP (NNP O) (NNP =))
                (PRN (-LRB- -LRB-)
                  (NP
                    (NP (NNS o1) (, ,) (NN o2) (, ,))
                    (: ...)
                    (NP (NN oT)))
                  (-RRB- -RRB-))))
            (CC and)
            (VP (VBZ returns)
              (NP
                (NP
                  (NP (DT the)
                    (ADJP (RBS most) (JJ probable))
                    (NN state/tag))
                  (NN sequence) (NNP Q) (NNP =))
                (PRN (-LRB- -LRB-)
                  (NP (NN q1) (, ,) (NN q2) (, ,) (NN qT))
                  (-RRB- -RRB-)))
              (PP
                (ADVP (RB together))
                (IN with)
                (NP (PRP$ its) (NN probability))))))))
    (. .)))

det(version-4, The-1)
advmod(version-4, slightly-2)
amod(version-4, simplified-3)
nsubj(algorithm-8, version-4)
case(Viterbi-7, of-5)
det(Viterbi-7, the-6)
nmod:of(version-4, Viterbi-7)
root(ROOT-0, algorithm-8)
mark(takes-12, that-9)
nsubj(takes-12, we-10)
nsubj(returns-35, we-10)
advmod(takes-12, present-11)
ccomp(algorithm-8, takes-12)
case(input-14, as-13)
nmod:as(takes-12, input-14)
det(HMM-17, a-15)
amod(HMM-17, single-16)
dep(input-14, HMM-17)
cc(input-14, and-18)
det(sequence-20, a-19)
nmod:as(takes-12, sequence-20)
conj:and(input-14, sequence-20)
case(words-23, of-21)
amod(words-23, observed-22)
nmod:of(sequence-20, words-23)
compound(=-25, O-24)
dobj(takes-12, =-25)
compound(o2-29, o1-27)
dep(=-25, o2-29)
dep(o2-29, oT-32)
cc(takes-12, and-34)
ccomp(algorithm-8, returns-35)
conj:and(takes-12, returns-35)
det(state/tag-39, the-36)
advmod(probable-38, most-37)
amod(state/tag-39, probable-38)
compound(=-42, state/tag-39)
compound(=-42, sequence-40)
compound(=-42, Q-41)
dobj(returns-35, =-42)
compound(qT-48, q1-44)
dep(qT-48, q2-46)
appos(=-42, qT-48)
case(probability-53, together-50)
mwe(together-50, with-51)
nmod:poss(probability-53, its-52)
nmod:together_with(returns-35, probability-53)

(ROOT
  (S
    (ADVP (RB Thus))
    (NP (DT the) (JJ EM-trained) (`` ``) (JJ pure) (NN HMM) ('' '') (NN tagger))
    (VP (VBZ is)
      (ADVP (RB probably))
      (VP
        (ADVP (RBS best))
        (VBN suited)
        (PP (TO to)
          (NP
            (NP (NNS cases))
            (SBAR
              (WHADVP (WRB where))
              (S
                (NP (DT no) (NN training) (NNS data))
                (VP (VBZ is)
                  (ADJP (JJ available))
                  (, ,)
                  (PP (IN for)
                    (NP
                      (NP (NN example))
                      (, ,)
                      (SBAR
                        (WHNP
                          (NP (WRB when) (JJ tagging) (NNS languages))
                          (WHPP (IN for)
                            (WHNP (WDT which))))
                        (S
                          (NP (DT no) (NNS data))
                          (VP (VBD was)
                            (ADJP (RB previously) (JJ hand-tagged))))))))))))))
    (. .)))

advmod(suited-12, Thus-1)
det(tagger-8, the-2)
amod(tagger-8, EM-trained-3)
amod(tagger-8, pure-5)
compound(tagger-8, HMM-6)
nsubjpass(suited-12, tagger-8)
auxpass(suited-12, is-9)
advmod(suited-12, probably-10)
advmod(suited-12, best-11)
root(ROOT-0, suited-12)
case(cases-14, to-13)
nmod:to(suited-12, cases-14)
nmod:for(languages-27, cases-14)
advmod(available-20, where-15)
neg(data-18, no-16)
compound(data-18, training-17)
nsubj(available-20, data-18)
cop(available-20, is-19)
acl:relcl(cases-14, available-20)
case(example-23, for-22)
nmod:for(available-20, example-23)
nmod:for(languages-27, example-23)
advmod(languages-27, when-25)
amod(languages-27, tagging-26)
dobj(hand-tagged-34, languages-27)
case(which-29, for-28)
ref(cases-14, which-29)
ref(example-23, which-29)
neg(data-31, no-30)
nsubj(hand-tagged-34, data-31)
cop(hand-tagged-34, was-32)
advmod(hand-tagged-34, previously-33)
acl:relcl(example-23, hand-tagged-34)

(ROOT
  (S
    (S
      (VP (VBG Coming)
        (NP (NN home))
        (PP (IN from)
          (NP
            (ADJP (RB very) (JJ lonely))
            (NNS places)))))
    (, ,)
    (NP
      (NP (DT all))
      (PP (IN of)
        (NP (PRP us))))
    (VP (VBP go)
      (ADJP
        (NP (DT a) (RB little))
        (JJ mad))
      (: :)
      (SBAR (IN whether)
        (S
          (PP (IN from)
            (NP
              (NP (JJ great) (JJ personal) (NN success))
              (, ,)
              (CC or)
              (RB just)
              (NP (DT an) (JJ all-night) (NN drive))))
          (, ,)
          (NP (PRP we))
          (VP (VBP are)
            (NP
              (NP (DT the) (JJ sole) (NNS survivors))
              (PP (IN of)
                (NP
                  (NP (DT a) (NN world))
                  (SBAR
                    (S
                      (NP (DT no) (NN one) (RB else))
                      (VP (VBZ has)
                        (ADVP (RB ever))
                        (VP (VBN seen))))))))))))
    (. .)))

advcl(go-11, Coming-1)
dobj(Coming-1, home-2)
case(places-6, from-3)
advmod(lonely-5, very-4)
amod(places-6, lonely-5)
nmod:from(Coming-1, places-6)
nsubj(go-11, all-8)
case(us-10, of-9)
nmod:of(all-8, us-10)
root(ROOT-0, go-11)
det(little-13, a-12)
nmod:npmod(mad-14, little-13)
xcomp(go-11, mad-14)
mark(survivors-32, whether-16)
case(success-20, from-17)
amod(success-20, great-18)
amod(success-20, personal-19)
nmod:from(survivors-32, success-20)
cc(success-20, or-22)
advmod(success-20, just-23)
det(drive-26, an-24)
amod(drive-26, all-night-25)
dep(success-20, drive-26)
nsubj(survivors-32, we-28)
cop(survivors-32, are-29)
det(survivors-32, the-30)
amod(survivors-32, sole-31)
ccomp(go-11, survivors-32)
case(world-35, of-33)
det(world-35, a-34)
nmod:of(survivors-32, world-35)
neg(one-37, no-36)
nsubj(seen-41, one-37)
advmod(one-37, else-38)
aux(seen-41, has-39)
advmod(seen-41, ever-40)
acl:relcl(world-35, seen-41)

(ROOT
  (S
    (NP
      (NP (NNP Skill))
      (PP (IN without)
        (NP (NN imagination))))
    (VP
      (VP (VBZ is)
        (NP (NN craftsmanship)))
      (CC and)
      (VP (VBZ gives)
        (NP (PRP us))
        (NP
          (NP (JJ many) (JJ useful) (NNS objects))
          (PP (JJ such) (IN as)
            (NP (NN wickerwork) (NN picnic) (NNS baskets))))))
    (. .)))

nsubj(craftsmanship-5, Skill-1)
nsubj(gives-7, Skill-1)
case(imagination-3, without-2)
nmod:without(Skill-1, imagination-3)
cop(craftsmanship-5, is-4)
root(ROOT-0, craftsmanship-5)
cc(craftsmanship-5, and-6)
conj:and(craftsmanship-5, gives-7)
iobj(gives-7, us-8)
amod(objects-11, many-9)
amod(objects-11, useful-10)
dobj(gives-7, objects-11)
case(baskets-16, such-12)
mwe(such-12, as-13)
compound(baskets-16, wickerwork-14)
compound(baskets-16, picnic-15)
nmod:such_as(objects-11, baskets-16)

(ROOT
  (S
    (NP
      (NP (NNP Imagination))
      (PP (IN without)
        (NP (NN skill))))
    (VP (VBZ gives)
      (NP (PRP us))
      (NP (JJ modern) (NN art)))
    (. .)))

nsubj(gives-4, Imagination-1)
case(skill-3, without-2)
nmod:without(Imagination-1, skill-3)
root(ROOT-0, gives-4)
iobj(gives-4, us-5)
amod(art-7, modern-6)
dobj(gives-4, art-7)

(ROOT
  (S
    (NP (DT An) (NNP MoD) (NN spokesman))
    (VP (VBD said) (: :) (`` ``)
      (S
        (S
          (NP
            (NP (NNS Surveys))
            (PP (IN of)
              (NP (NNP Astute))))
          (VP (VBP have)
            (ADVP (RB now))
            (VP (VBN been)
              (VP (VBN completed)))))
        (CC and)
        (S
          (NP (PRP she))
          (VP (MD will)
            (VP (VB proceed)
              (S
                (VP (TO to)
                  (VP (VB Faslane)
                    (PP (IN under)
                      (NP (PRP$ her) (JJ own) (NN power)))))))))))
    (. .)))

det(spokesman-3, An-1)
compound(spokesman-3, MoD-2)
nsubj(said-4, spokesman-3)
root(ROOT-0, said-4)
nsubjpass(completed-13, Surveys-7)
case(Astute-9, of-8)
nmod:of(Surveys-7, Astute-9)
aux(completed-13, have-10)
advmod(completed-13, now-11)
auxpass(completed-13, been-12)
xcomp(said-4, completed-13)
cc(completed-13, and-14)
nsubj(proceed-17, she-15)
nsubj:xsubj(Faslane-19, she-15)
aux(proceed-17, will-16)
xcomp(said-4, proceed-17)
conj:and(completed-13, proceed-17)
mark(Faslane-19, to-18)
xcomp(proceed-17, Faslane-19)
case(power-23, under-20)
nmod:poss(power-23, her-21)
amod(power-23, own-22)
nmod:under(Faslane-19, power-23)

(ROOT
  (S
    (NP (PRP She))
    (VP (VBZ is)
      (VP (VBG being)
        (VP (VBN escorted)
          (PP (IN by)
            (NP
              (NP (NNS tugs))
              (CC and)
              (NP (NNP HMS) (NNP Shoreham)))))))
    (. .) ('' '')))

nsubjpass(escorted-4, She-1)
aux(escorted-4, is-2)
auxpass(escorted-4, being-3)
root(ROOT-0, escorted-4)
case(tugs-6, by-5)
nmod:by(escorted-4, tugs-6)
cc(tugs-6, and-7)
compound(Shoreham-9, HMS-8)
nmod:by(escorted-4, Shoreham-9)
conj:and(tugs-6, Shoreham-9)

(ROOT
  (S (CC But)
    (NP
      (ADJP (RB far) (JJR fewer))
      (NNS people))
    (ADVP (RB fully))
    (VP (VBP understand)
      (SBAR
        (WHADVP (WRB how))
        (S
          (NP (DT the) (NNP Media) (NNP Lab))
          (VP
            (VP (VBZ operates))
            (, ,)
            (VP (VBZ fits)
              (PP (IN into)
                (NP (NNP MIT))))
            (, ,)
            (CC and)
            (VP (VBZ encourages)
              (NP
                (NP (PDT such) (DT a) (JJ creative) (NN environment))
                (: ;)
                (NP
                  (NP
                    (QP (RB about) (PDT half)))
                  (PP (IN of)
                    (NP
                      (NP (DT the) (NN anniversary) (NN celebration) (POS 's))
                      (NN program)))
                  (VP (VBN focused)
                    (PP (IN on)
                      (S
                        (ADVP (RB simply))
                        (VP (VBG defining)
                          (SBAR
                            (WHNP (WP what))
                            (S
                              (NP (DT the) (NNP Media) (NNP Lab))
                              (VP (VBZ is)))))))))))))))
    (. .)))

cc(understand-6, But-1)
advmod(fewer-3, far-2)
amod(people-4, fewer-3)
nsubj(understand-6, people-4)
advmod(understand-6, fully-5)
root(ROOT-0, understand-6)
advmod(operates-11, how-7)
det(Lab-10, the-8)
compound(Lab-10, Media-9)
nsubj(operates-11, Lab-10)
nsubj(fits-13, Lab-10)
nsubj(encourages-18, Lab-10)
ccomp(understand-6, operates-11)
ccomp(understand-6, fits-13)
conj:and(operates-11, fits-13)
case(MIT-15, into-14)
nmod:into(fits-13, MIT-15)
cc(operates-11, and-17)
ccomp(understand-6, encourages-18)
conj:and(operates-11, encourages-18)
det:predet(environment-22, such-19)
det(environment-22, a-20)
amod(environment-22, creative-21)
dobj(encourages-18, environment-22)
advmod(half-25, about-24)
dep(environment-22, half-25)
case(program-31, of-26)
det(celebration-29, the-27)
compound(celebration-29, anniversary-28)
nmod:poss(program-31, celebration-29)
case(celebration-29, 's-30)
nmod:of(half-25, program-31)
acl(half-25, focused-32)
mark(defining-35, on-33)
advmod(defining-35, simply-34)
advcl(focused-32, defining-35)
dobj(is-40, what-36)
det(Lab-39, the-37)
compound(Lab-39, Media-38)
nsubj(is-40, Lab-39)
ccomp(defining-35, is-40)

(ROOT
  (S
    (PP (RB Instead) (IN of)
      (S
        (VP
          (ADVP (RB constantly))
          (VBG worrying)
          (PP (IN about)
            (NP (NN funding))))))
    (, ,)
    (NP
      (NP (DT the) (NN faculty))
      (CC and)
      (NP (NNS students)))
    (VP (MD can)
      (VP (VB focus)
        (PP (IN on)
          (NP (PRP$ their) (NN project)))
        (, ,)
        (PP (IN with)
          (NP
            (NP (DT the) (NN exception))
            (PP (IN of)
              (NP
                (NP (NNS sponsors) (POS '))
                (NNS weeks)))
            (, ,)
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP they))
                (VP (VBP have)
                  (S
                    (VP (TO to)
                      (VP (VB convince)
                        (S
                          (NP (NNS companies))
                          (VP (TO to)
                            (VP (VB start)
                              (CC or)
                              (VB continue)
                              (NP (PRP$ their) (NN support)))))))))))))))
    (. .)))

mark(worrying-4, Instead-1)
mwe(Instead-1, of-2)
advmod(worrying-4, constantly-3)
advcl(focus-13, worrying-4)
case(funding-6, about-5)
nmod:about(worrying-4, funding-6)
det(faculty-9, the-8)
nsubj(focus-13, faculty-9)
cc(faculty-9, and-10)
conj:and(faculty-9, students-11)
nsubj(focus-13, students-11)
aux(focus-13, can-12)
root(ROOT-0, focus-13)
case(project-16, on-14)
nmod:poss(project-16, their-15)
nmod:on(focus-13, project-16)
case(exception-20, with-18)
det(exception-20, the-19)
nmod:with(focus-13, exception-20)
case(weeks-24, of-21)
nmod:poss(weeks-24, sponsors-22)
case(sponsors-22, '-23)
nmod:of(exception-20, weeks-24)
advmod(have-28, when-26)
nsubj(have-28, they-27)
nsubj:xsubj(convince-30, they-27)
acl:relcl(exception-20, have-28)
mark(convince-30, to-29)
xcomp(have-28, convince-30)
dobj(convince-30, companies-31)
nsubj:xsubj(start-33, companies-31)
nsubj:xsubj(continue-35, companies-31)
mark(start-33, to-32)
xcomp(convince-30, start-33)
cc(start-33, or-34)
xcomp(convince-30, continue-35)
conj:or(start-33, continue-35)
nmod:poss(support-37, their-36)
dobj(start-33, support-37)

(ROOT
  (S
    (NP (DT The) (NNS doctors))
    (VP (VBP are)
      (VP (VBG warning)
        (SBAR (IN that)
          (S
            (NP (DT the) (NNP NHS))
            (VP (MD can) (RB not)
              (VP (VB make)
                (NP
                  (NP (DT the) (NN 20bn))
                  (PP (IN of)
                    (NP
                      (NP (NNS savings))
                      (PP (IN by)
                        (NP (CD 2014))))))
                (SBAR (IN that)
                  (S
                    (NP (NNS ministers))
                    (VP (VBP expect))))
                (, ,)
                (SBAR (IN while)
                  (S
                    (S
                      (ADVP (RB simultaneously))
                      (S
                        (VP (VBG undertaking)
                          (NP
                            (NP (DT a) (JJ huge) (NN reorganisation))
                            (SBAR
                              (WHNP (WDT that))
                              (S
                                (VP (MD will)
                                  (VP (VB see)
                                    (NP
                                      (NP
                                        (NP (NNP England) (POS 's))
                                        (CD 152) (JJ primary) (NN care) (NNS trusts))
                                      (PRN (-LRB- -LRB-)
                                        (NP (NNP PCTs))
                                        (-RRB- -RRB-))))))))))
                      (VP (VBD abolished)))
                    (CC and)
                    (S
                      (NP
                        (NP (NNS consortiums))
                        (PP (IN of)
                          (NP (NNP GPs))))
                      (VP (VBP assume)
                        (NP
                          (NP (NN responsibility))
                          (PP (IN for)
                            (NP
                              (NP (DT the) (VBG commissioning))
                              (PP (IN of)
                                (NP
                                  (NP (NNS services))
                                  (PP (IN for)
                                    (NP (NNS patients))))))))))))))))))
    (. .)))

det(doctors-2, The-1)
nsubj(warning-4, doctors-2)
aux(warning-4, are-3)
root(ROOT-0, warning-4)
mark(make-10, that-5)
det(NHS-7, the-6)
nsubj(make-10, NHS-7)
aux(make-10, can-8)
neg(make-10, not-9)
ccomp(warning-4, make-10)
det(20bn-12, the-11)
dobj(make-10, 20bn-12)
case(savings-14, of-13)
nmod:of(20bn-12, savings-14)
case(2014-16, by-15)
nmod:by(savings-14, 2014-16)
mark(expect-19, that-17)
nsubj(expect-19, ministers-18)
ccomp(make-10, expect-19)
mark(abolished-39, while-21)
advmod(abolished-39, simultaneously-22)
csubj(abolished-39, undertaking-23)
det(reorganisation-26, a-24)
amod(reorganisation-26, huge-25)
dobj(undertaking-23, reorganisation-26)
nsubj(see-29, reorganisation-26)
ref(reorganisation-26, that-27)
aux(see-29, will-28)
acl:relcl(reorganisation-26, see-29)
nmod:poss(trusts-35, England-30)
case(England-30, 's-31)
nummod(trusts-35, 152-32)
amod(trusts-35, primary-33)
compound(trusts-35, care-34)
dobj(see-29, trusts-35)
appos(trusts-35, PCTs-37)
advcl(make-10, abolished-39)
cc(abolished-39, and-40)
nsubj(assume-44, consortiums-41)
case(GPs-43, of-42)
nmod:of(consortiums-41, GPs-43)
advcl(make-10, assume-44)
conj:and(abolished-39, assume-44)
dobj(assume-44, responsibility-45)
case(the-47, for-46)
nmod:for(responsibility-45, the-47)
amod(the-47, commissioning-48)
case(services-50, of-49)
nmod:of(the-47, services-50)
case(patients-52, for-51)
nmod:for(services-50, patients-52)

